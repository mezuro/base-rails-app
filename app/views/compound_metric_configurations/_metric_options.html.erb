    <div class="form-row">
      <div class="field-container">
        <%= f.label :name, class: 'control-label' %>
        <%= f.text_field :name, :required => true, class: 'text-field form-control', value: (metric.name unless metric.nil?) %>
      </div>
      <div class="help-container">
        <p>
          <%= t('body1_compound_metric_options') %>
        </p>
      </div>
    </div>

    <div class="form-row">
      <div class="field-container">
        <%= f.label :description, class: 'control-label' %>
        <%= f.text_field :description, class: 'text-field form-control', value: (metric.description unless metric.nil?)  %>
      </div>
      <div class="help-container">
        <p>
          <%= t('body2_compound_metric_options') %>
        </p>
      </div>
    </div>

    <div class="form-row">
      <div class="field-container">
        <%= f.label :script, class: 'control-label' %>
        <%= f.text_area :script, :required => true, class: 'text-area form-control', value: (metric.script unless metric.nil?)  %>
      </div>
      <div class="help-container">
        <p>
          <%= t('body3_compound_metric_options') %>
        </p>
      </div>
    </div>

    <div class="form-row">
      <div class="field-container">
        <%= f.label :scope, 'Scope', class: 'control-label' %>
        <%= f.select( :scope, scope_options, {class: 'form-control', selected: (metric.scope unless metric.nil?)} ) %>
      </div>
      <div class="help-container">
        <p>
          <%= t('the') %> <%= link_to t('granularity'), tutorials_path('keywords', anchor: "granularity")%>  <%= t('of_the') %>  <%= link_to t('modules'),  tutorials_path( 'keywords', anchor: 'module' )%>  <%= t('measured_metric') %>
        </p>
      </div>
    </div>

    <div class="form-row">
      <div class="field-container">
        <%= f.label :code, class: 'control-label' %>
        <%= f.text_field :code, :required => true, class: 'text-field form-control' %>
      </div>
      <div class="help-container">
        <p>
        A variable that holds the value of a metric calculation. It can be used in the script of another compound metric.
        </p>
        <p>
          Example:
          Code foo := 10
        </p>
      </div>
    </div>
<%= f.hidden_field(:compound, { value: "true"}) %>
