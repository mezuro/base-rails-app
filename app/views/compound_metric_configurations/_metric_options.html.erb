    <div class="form-row">
      <div class="field-container">
        <%= f.label :name, class: 'control-label' %>
        <%= f.text_field :name, class: 'text-field', value: (metric.name unless metric.nil?) %>
      </div>
      <div class="help-container">
        <p>
          A custom name for your compound metric.
        </p>
      </div>
    </div>

    <div class="form-row">
      <div class="field-container">
        <%= f.label :description, class: 'control-label' %>
        <%= f.text_field :description, class: 'text-field', value: (metric.description unless metric.nil?)  %>
      </div>
      <div class="help-container">
        <p>
          A short description of your compound metric.
        </p>
      </div>
    </div>

    <div class="form-row">
      <div class="field-container">
        <%= f.label :script, class: 'control-label' %>
        <%= f.text_area :script, class: 'text-area', value: (metric.script unless metric.nil?)  %>
      </div>
      <div class="help-container">
        <p>
          A mathematical expression (in javascript) to calculate your compound metric. It needs a return statement. The codes of already created metrics can be used inside the script.
        </p>
      </div>
    </div>

    <div class="form-row">
      <div class="field-container">
        <%= f.label :scope, 'Scope', class: 'control-label' %>
        <%= f.select( :scope, scope_options, {class: 'form-control', selected: (metric.scope unless metric.nil?)} ) %>
      </div>
      <div class="help-container">
        <p>
          The <%= link_to 'granularity', tutorials_path("keywords", anchor: "granularity")%> of the <%= link_to 'modules',  tutorials_path("keywords", anchor: "module")%> measured by this metric.
        </p>
      </div>
    </div>
<%= f.hidden_field(:compound, { value: "true"}) %>
